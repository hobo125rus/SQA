============================= test session starts ==============================
platform darwin -- Python 3.11.5, pytest-7.4.0, pluggy-1.0.0 -- /Users/user/anaconda3/bin/python
cachedir: .pytest_cache
rootdir: /Users/user/Desktop/SQA
plugins: anyio-3.5.0
collecting ... collected 2 items

sqa_tests.py::test_exception_tc012 FAILED                                [ 50%]
sqa_tests.py::test_exception_tc017 SKIPPED (unconditional skip)          [100%]

=================================== FAILURES ===================================
_____________________________ test_exception_tc012 _____________________________

    def test_exception_tc012():
>       TC_012()

sqa_tests.py:86: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def TC_012() -> Bool:
        """
        The function performs a check according to test case #12.
        Cross-site Script Vulnerability Testing (XSS).
        Parameters:
            None
    
        Returns:
        -----------
            bool
                Returns True if the test did not detect XSS vulnerabilities
                and returns False if vulnerabilities are detected.
        """
        driver = init_web_page()
        textarea_fields = driver.find_element(By.XPATH, '//textarea')
        input_tags = driver.find_elements(By.TAG_NAME, 'input')
        input_text_fields = []
        btn_submit = []
        btn_search = []
    
        for input_field in input_tags:
            if input_field.get_attribute('type') == 'text' \
            or input_field.get_attribute('name') == 'subject':
                input_text_fields.append(input_field)
            elif input_field.get_attribute('name') == 'submit':
                btn_submit = input_field
            elif input_field.get_attribute('value') == 'Go':
                btn_search = input_field
            else:
                logging.info(f'It is not possible to enter text for the "input" tag with the type: \
        {input_field.get_attribute("type")}')
    
        input_field = None
        input_text_fields.append(textarea_fields)
        logging.info(f'Total testing inputs: {len(input_text_fields)}')
        tcconstants = TestCaseConstants.Test_XSS
    
        for cmd in tcconstants:
            for input_field in input_text_fields:
                input_field.send_keys(cmd)
                if input_field.get_attribute('name') == 'query':
                    btn_search.click()
                else:
                    btn_submit.click()
                sleep(1)
                try:
                    alert = Alert(driver)
                    logging.info(f'Finded alert text: "{alert.text}".')
                    alert.accept()
>                   assert False, 'Finded alert'
E                   AssertionError: Finded alert
E                   assert False

sqa_tests.py:76: AssertionError
=========================== short test summary info ============================
FAILED sqa_tests.py::test_exception_tc012 - AssertionError: Finded alert
========================= 1 failed, 1 skipped in 6.18s =========================
